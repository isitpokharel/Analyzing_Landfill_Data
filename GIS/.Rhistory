domain = my_initial_data$`Current Landfill Status`)
d <- leaflet(us_states) %>%
# center the view at the center of united states provided in lat & lon below.
setView(lng = -98.35, lat = 39.50, zoom = 4) %>%
#addProviderTiles(provider="Stamen.Toner") %>%
addProviderTiles("CartoDB.VoyagerLabelsUnder")%>%
addPolygons(
data = merged_data,
weight=.75,   # line thickness
color="black",
fillColor = ~pal_pop(pop_labels),  # color by population
fillOpacity = .8,
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Waste in Million U.S. ton: ", round(merged_data$waste_in_tons/1000000,2)
)) %>%  #transparency
addCircleMarkers(
data=my_initial_data,
radius = 2,
color = "black",
fillColor = ~pal1(`Current Landfill Status`),
weight = 2,
fillOpacity = 0.8,
label=paste(my_initial_data$`Landfill Name`),
popup = ~paste(my_initial_data$`Landfill Name`,
"<br>City: ",my_initial_data$`City`,
"<br>State: ",my_initial_data$`State`,
"<br>Operating Status: ",my_initial_data$`Current Landfill Status`,
"<br>Ownership Type: ",my_initial_data$`Ownership Type`,
"<br>Operator Organization: ", my_initial_data$`Landfill Operator Organization`,
"<br>Owner: ", my_initial_data$`Landfill Owner Organization(s)`,
"<br>Waste in Place (tons): ", my_initial_data$`Waste in Place (tons)`
)
) %>%
addRectangles(
lng1=-124.48, lat1=42.00,
lng2=-114.13, lat2=32.53,
fillColor = "transparent",
color = "red"
) %>%
addRectangles(
lng1 = -88.95, lat1 = 46.18,
lng2 = -64.15, lat2 = 24.74,
fillColor = "transparent",
color = "red"
) %>%
addLegend(position="bottomleft",
title="Landfills by their Status",
labels=my_initial_data$`Current Landfill Status`,
pal =pal1,
opacity = 0.8,
values=my_initial_data$`Current Landfill Status` # must specify df
) %>%
addLegend(position="bottomright",
title="Population Size",
labels=merged_data$pop_labels,
pal = pal_pop,
opacity = 0.8,
values=na.omit(merged_data$pop_labels)
)
d
#base map with polygon layer of american states centered at
# lng = -98.35, lat = 39.50 which is center of america
my_initial_data$`Current Landfill Status` <- factor(my_initial_data$`Current Landfill Status`,
levels = c("Open", "Closed", "Unknown"))
pal1<-colorFactor(palette=c("green3", "firebrick2", "magenta"),
domain = my_initial_data$`Current Landfill Status`)
d <- leaflet(us_states) %>%
# center the view at the center of united states provided in lat & lon below.
setView(lng = -98.35, lat = 39.50, zoom = 4) %>%
#addProviderTiles(provider="Stamen.Toner") %>%
addProviderTiles("CartoDB.VoyagerLabelsUnder")%>%
addPolygons(
data = merged_data,
weight=.75,   # line thickness
color="black",
fillColor = ~pal_pop(pop_labels),  # color by population
fillOpacity = .8,
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Waste in Million U.S. ton: ", round(merged_data$waste_in_tons/1000000,2)
)) %>%  #transparency
addCircleMarkers(
data=my_initial_data,
radius = 2,
color = "black",
fillColor = ~pal1(`Current Landfill Status`),
weight = 2,
fillOpacity = 0.8,
label=paste(my_initial_data$`Landfill Name`),
popup = ~paste(my_initial_data$`Landfill Name`,
"<br>City: ",my_initial_data$`City`,
"<br>State: ",my_initial_data$`State`,
"<br>Operating Status: ",my_initial_data$`Current Landfill Status`,
"<br>Ownership Type: ",my_initial_data$`Ownership Type`,
"<br>Operator Organization: ", my_initial_data$`Landfill Operator Organization`,
"<br>Owner: ", my_initial_data$`Landfill Owner Organization(s)`,
"<br>Waste in Place (tons): ", my_initial_data$`Waste in Place (tons)`
)
) %>%
addRectangles(
lng1=-124.48, lat1=42.00,
lng2=-114.13, lat2=32.53,
fillColor = "transparent",
color = "red"
) %>%
addRectangles(
lng1=-100.0, lat1=42.5,
lng2=-75.0, lat2=25.0,
fillColor = "transparent",
color = "red"
) %>%
addLegend(position="bottomleft",
title="Landfills by their Status",
labels=my_initial_data$`Current Landfill Status`,
pal =pal1,
opacity = 0.8,
values=my_initial_data$`Current Landfill Status` # must specify df
) %>%
addLegend(position="bottomright",
title="Population Size",
labels=merged_data$pop_labels,
pal = pal_pop,
opacity = 0.8,
values=na.omit(merged_data$pop_labels)
)
d
#base map with polygon layer of american states centered at
# lng = -98.35, lat = 39.50 which is center of america
my_initial_data$`Current Landfill Status` <- factor(my_initial_data$`Current Landfill Status`,
levels = c("Open", "Closed", "Unknown"))
pal1<-colorFactor(palette=c("green3", "firebrick2", "magenta"),
domain = my_initial_data$`Current Landfill Status`)
d <- leaflet(us_states) %>%
# center the view at the center of united states provided in lat & lon below.
setView(lng = -98.35, lat = 39.50, zoom = 4) %>%
#addProviderTiles(provider="Stamen.Toner") %>%
addProviderTiles("CartoDB.VoyagerLabelsUnder")%>%
addPolygons(
data = merged_data,
weight=.75,   # line thickness
color="black",
fillColor = ~pal_pop(pop_labels),  # color by population
fillOpacity = .8,
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Waste in Million U.S. ton: ", round(merged_data$waste_in_tons/1000000,2)
)) %>%  #transparency
addCircleMarkers(
data=my_initial_data,
radius = 2,
color = "black",
fillColor = ~pal1(`Current Landfill Status`),
weight = 2,
fillOpacity = 0.8,
label=paste(my_initial_data$`Landfill Name`),
popup = ~paste(my_initial_data$`Landfill Name`,
"<br>City: ",my_initial_data$`City`,
"<br>State: ",my_initial_data$`State`,
"<br>Operating Status: ",my_initial_data$`Current Landfill Status`,
"<br>Ownership Type: ",my_initial_data$`Ownership Type`,
"<br>Operator Organization: ", my_initial_data$`Landfill Operator Organization`,
"<br>Owner: ", my_initial_data$`Landfill Owner Organization(s)`,
"<br>Waste in Place (tons): ", my_initial_data$`Waste in Place (tons)`
)
) %>%
addRectangles(
lng1=-124.48, lat1=42.00,
lng2=-114.13, lat2=32.53,
fillColor = "transparent",
color = "red"
) %>%
addRectangles(
lng1 = -97.62, lat1 = 45.15,
lng2 = -66.96, lat2 = 25.08,
fillColor = "transparent",
color = "red"
) %>%
addLegend(position="bottomleft",
title="Landfills by their Status",
labels=my_initial_data$`Current Landfill Status`,
pal =pal1,
opacity = 0.8,
values=my_initial_data$`Current Landfill Status` # must specify df
) %>%
addLegend(position="bottomright",
title="Population Size",
labels=merged_data$pop_labels,
pal = pal_pop,
opacity = 0.8,
values=na.omit(merged_data$pop_labels)
)
d
# circle markers labels and colors
sizes <- c(6, 10, 14, 18)
# Define the break points
breaks <- c(0, 50, 100, 150, Inf)
# Define the labels for each interval based on the range of number_landfills values
labels <- c(paste0("0 to ", breaks[2] -1 ),
paste0(breaks[2], " to ", breaks[3] - 1),
paste0(breaks[3], " to ", breaks[4] - 1),
paste0( breaks[4], "and Above "))
# labels to circle size mapping
size_mapping <- setNames(sizes, labels)
#add new columns to the dataset with vectors for circle size and circle_labels
merged_data$circle_label <- cut(merged_data$number_landfills, breaks = breaks, labels = labels)
merged_data$circle_size <- size_mapping[as.character(merged_data$circle_label)]
#color_palette <- rainbow(5, start = 1/2, end = 0)
color_palette <- c("#FFFFFF","#FFAA0000","#FF550000","#FF000000" )
# Use the color palette to assign a color to each size in the sizes vector
size_colors <- setNames(color_palette, sizes)
pal2<-colorFactor(palette=size_colors,
domain = merged_data$circle_label)
state_by_waste <- leaflet(merged_data)%>%
setView(lng = -98.35, lat = 39.50, zoom = 4) %>%
addTiles() %>%
addProviderTiles("CartoDB.VoyagerLabelsUnder") %>%
#addProviderTiles(provider="Stamen.Toner") %>%
addPolygons(
data = merged_data,
weight=.75,   # line thickness
color="black",
fillColor = ~pal_pop(pop_labels),  # color by population
fillOpacity = .8,
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Waste in Million U.S. ton: ", round(merged_data$waste_in_tons/1000000,2)
)) %>%  #transparency
addCircleMarkers(data=merged_data,
lng=merged_data$center_x,lat=merged_data$center_y,
radius = as.numeric(merged_data$circle_size),
weight = 2,
fillColor = ~pal2(circle_label), #color of circles
fillOpacity = 0.8,
stroke = TRUE,
color = "black", #stroke color
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Number of Landfill Sites: ", merged_data$number_landfills,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Landfill Waste in Mil U.S. ton: ", round(merged_data$waste_in_tons/1000000,2))
) %>%
addRectangles(
lng1=-106.6456, lat1=36.4956,
lng2=-93.5083, lat2=25.8371,
fillColor = "transparent",
color = "red"
) %>%
addRectangles(
lng1=-124.4095, lat1=42.0095,
lng2=-114.1305, lat2=32.5343,
fillColor = "transparent",
color = "red"
) %>%
addLegend(position="bottomleft",
title="Number of Landfills",
labels=merged_data$circle_label,
pal = pal2,
opacity = 0.8,
values=na.omit(merged_data$circle_label)
) %>%
addLegend(position="bottomright",
title="Population Size",
labels=merged_data$pop_labels,
pal = pal_pop,
opacity = 0.8,
values=na.omit(merged_data$pop_labels)
)
state_by_waste
# circle markers labels and colors
sizes <- c(6, 10, 14, 18)
# Define the break points
breaks <- c(0, 50, 100, 150, Inf)
# Define the labels for each interval based on the range of number_landfills values
labels <- c(paste0("0 to ", breaks[2] -1 ),
paste0(breaks[2], " to ", breaks[3] - 1),
paste0(breaks[3], " to ", breaks[4] - 1),
paste0( breaks[4], "and Above "))
# labels to circle size mapping
size_mapping <- setNames(sizes, labels)
#add new columns to the dataset with vectors for circle size and circle_labels
merged_data$circle_label <- cut(merged_data$number_landfills, breaks = breaks, labels = labels)
merged_data$circle_size <- size_mapping[as.character(merged_data$circle_label)]
#color_palette <- rainbow(5, start = 1/2, end = 0)
color_palette <- c("#FFFFFF","#FFAA0000","#FF550000","#FF000000" )
# Use the color palette to assign a color to each size in the sizes vector
size_colors <- setNames(color_palette, sizes)
pal2<-colorFactor(palette=size_colors,
domain = merged_data$circle_label)
state_by_waste <- leaflet(merged_data)%>%
setView(lng = -98.35, lat = 39.50, zoom = 4) %>%
addTiles() %>%
addProviderTiles("CartoDB.VoyagerLabelsUnder") %>%
#addProviderTiles(provider="Stamen.Toner") %>%
addPolygons(
data = merged_data,
weight=.75,   # line thickness
color="black",
fillColor = ~pal_pop(pop_labels),  # color by population
fillOpacity = .8,
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Waste in Million U.S. ton: ", round(merged_data$waste_in_tons/1000000,2)
)) %>%  #transparency
addCircleMarkers(data=merged_data,
lng=merged_data$center_x,lat=merged_data$center_y,
radius = as.numeric(merged_data$circle_size),
weight = 2,
fillColor = ~pal2(circle_label), #color of circles
fillOpacity = 0.8,
stroke = TRUE,
color = "black", #stroke color
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Number of Landfill Sites: ", merged_data$number_landfills,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Landfill Waste in Mil U.S. ton: ", round(merged_data$waste_in_tons/1000000,2))
) %>%
addRectangles(
lng1=-106.6456, lat1=36.4956,
lng2=-93.5083, lat2=25.8371,
fillColor = "transparent",
color = "red"
) %>%
addRectangles(
lng1=-124.4095, lat1=42.0095,
lng2=-114.1305, lat2=32.5343,
fillColor = "transparent",
color = "red"
) %>%
addLabelOnlyMarkers(lng = ne_rect$lng1, lat = ne_rect$lat2,
label = "Higher population states have larger number of landfills",
labelOptions = labelOptions(noHide = TRUE, direction = "bottom", textOnly = TRUE)) %>%
addLabelOnlyMarkers(lng = se_rect$lng1, lat = se_rect$lat2,
label = "Higher population states have larger number of landfills",
labelOptions = labelOptions(noHide = TRUE, direction = "bottom", textOnly = TRUE)) %>%
addLegend(position="bottomleft",
title="Number of Landfills",
labels=merged_data$circle_label,
pal = pal2,
opacity = 0.8,
values=na.omit(merged_data$circle_label)
) %>%
addLegend(position="bottomright",
title="Population Size",
labels=merged_data$pop_labels,
pal = pal_pop,
opacity = 0.8,
values=na.omit(merged_data$pop_labels)
)
# circle markers labels and colors
sizes <- c(6, 10, 14, 18)
# Define the break points
breaks <- c(0, 50, 100, 150, Inf)
# Define the labels for each interval based on the range of number_landfills values
labels <- c(paste0("0 to ", breaks[2] -1 ),
paste0(breaks[2], " to ", breaks[3] - 1),
paste0(breaks[3], " to ", breaks[4] - 1),
paste0( breaks[4], "and Above "))
# labels to circle size mapping
size_mapping <- setNames(sizes, labels)
#add new columns to the dataset with vectors for circle size and circle_labels
merged_data$circle_label <- cut(merged_data$number_landfills, breaks = breaks, labels = labels)
merged_data$circle_size <- size_mapping[as.character(merged_data$circle_label)]
#color_palette <- rainbow(5, start = 1/2, end = 0)
color_palette <- c("#FFFFFF","#FFAA0000","#FF550000","#FF000000" )
# Use the color palette to assign a color to each size in the sizes vector
size_colors <- setNames(color_palette, sizes)
pal2<-colorFactor(palette=size_colors,
domain = merged_data$circle_label)
state_by_waste <- leaflet(merged_data)%>%
setView(lng = -98.35, lat = 39.50, zoom = 4) %>%
addTiles() %>%
addProviderTiles("CartoDB.VoyagerLabelsUnder") %>%
#addProviderTiles(provider="Stamen.Toner") %>%
addPolygons(
data = merged_data,
weight=.75,   # line thickness
color="black",
fillColor = ~pal_pop(pop_labels),  # color by population
fillOpacity = .8,
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Waste in Million U.S. ton: ", round(merged_data$waste_in_tons/1000000,2)
)) %>%  #transparency
addCircleMarkers(data=merged_data,
lng=merged_data$center_x,lat=merged_data$center_y,
radius = as.numeric(merged_data$circle_size),
weight = 2,
fillColor = ~pal2(circle_label), #color of circles
fillOpacity = 0.8,
stroke = TRUE,
color = "black", #stroke color
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Number of Landfill Sites: ", merged_data$number_landfills,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Landfill Waste in Mil U.S. ton: ", round(merged_data$waste_in_tons/1000000,2))
) %>%
addRectangles(
lng1=-106.6456, lat1=36.4956,
lng2=-93.5083, lat2=25.8371,
fillColor = "transparent",
color = "red"
) %>%
addRectangles(
lng1=-124.4095, lat1=42.0095,
lng2=-114.1305, lat2=32.5343,
fillColor = "transparent",
color = "red"
) %>%
addLabelOnlyMarkers(lng = -93.5083, lat = 25.8371,
label = "Higher population states have larger number of landfills",
labelOptions = labelOptions(noHide = TRUE, direction = "bottom", textOnly = TRUE)) %>%
addLegend(position="bottomleft",
title="Number of Landfills",
labels=merged_data$circle_label,
pal = pal2,
opacity = 0.8,
values=na.omit(merged_data$circle_label)
) %>%
addLegend(position="bottomright",
title="Population Size",
labels=merged_data$pop_labels,
pal = pal_pop,
opacity = 0.8,
values=na.omit(merged_data$pop_labels)
)
state_by_waste
# circle markers labels and colors
sizes <- c(6, 10, 14, 18)
# Define the break points
breaks <- c(0, 50, 100, 150, Inf)
# Define the labels for each interval based on the range of number_landfills values
labels <- c(paste0("0 to ", breaks[2] -1 ),
paste0(breaks[2], " to ", breaks[3] - 1),
paste0(breaks[3], " to ", breaks[4] - 1),
paste0( breaks[4], "and Above "))
# labels to circle size mapping
size_mapping <- setNames(sizes, labels)
#add new columns to the dataset with vectors for circle size and circle_labels
merged_data$circle_label <- cut(merged_data$number_landfills, breaks = breaks, labels = labels)
merged_data$circle_size <- size_mapping[as.character(merged_data$circle_label)]
#color_palette <- rainbow(5, start = 1/2, end = 0)
color_palette <- c("#FFFFFF","#FFAA0000","#FF550000","#FF000000" )
# Use the color palette to assign a color to each size in the sizes vector
size_colors <- setNames(color_palette, sizes)
pal2<-colorFactor(palette=size_colors,
domain = merged_data$circle_label)
state_by_waste <- leaflet(merged_data)%>%
setView(lng = -98.35, lat = 39.50, zoom = 4) %>%
addTiles() %>%
addProviderTiles("CartoDB.VoyagerLabelsUnder") %>%
#addProviderTiles(provider="Stamen.Toner") %>%
addPolygons(
data = merged_data,
weight=.75,   # line thickness
color="black",
fillColor = ~pal_pop(pop_labels),  # color by population
fillOpacity = .8,
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Waste in Million U.S. ton: ", round(merged_data$waste_in_tons/1000000,2)
)) %>%  #transparency
addCircleMarkers(data=merged_data,
lng=merged_data$center_x,lat=merged_data$center_y,
radius = as.numeric(merged_data$circle_size),
weight = 2,
fillColor = ~pal2(circle_label), #color of circles
fillOpacity = 0.8,
stroke = TRUE,
color = "black", #stroke color
label= paste(merged_data$NAME),
popup = ~paste(merged_data$NAME,
"<br>Number of Landfill Sites: ", merged_data$number_landfills,
"<br>Population: ", merged_data$pop_2014.y,
"<br>Landfill Waste in Mil U.S. ton: ", round(merged_data$waste_in_tons/1000000,2))
) %>%
addRectangles(
lng1=-106.6456, lat1=36.4956,
lng2=-93.5083, lat2=25.8371,
fillColor = "transparent",
color = "red"
) %>%
addRectangles(
lng1=-124.4095, lat1=42.0095,
lng2=-114.1305, lat2=32.5343,
fillColor = "transparent",
color = "red"
) %>%
addLegend(position="bottomleft",
title="Number of Landfills",
labels=merged_data$circle_label,
pal = pal2,
opacity = 0.8,
values=na.omit(merged_data$circle_label)
) %>%
addLegend(position="bottomright",
title="Population Size",
labels=merged_data$pop_labels,
pal = pal_pop,
opacity = 0.8,
values=na.omit(merged_data$pop_labels)
)
state_by_waste
